#!/data/data/com.termux/files/usr/bin/env python
##
##  Capture all wifi frames sent over the air
##

import os
import signal
import sys

from subprocess import call


WLAN_IFACE = None

try:
    WLAN_IFACE = os.environ['IFACE']

    if not WLAN_IFACE:
        WLAN_IFACE = "wlan1"
except:
    WLAN_IFACE = "wlan1"

def print_usage():
    print("")
    print("Usage: wifi-dump [CHANNEL]")
    print("")

def attack():
    signal.signal(signal.SIGINT, shutdown)

    with open(os.devnull, "w") as mystdout:
        """ Deactivating interface with ifconfig """
        print("== Deactivating interface... ", end="")

        ret = call(["/data/data/com.termux/files/usr/bin/ifconfig",
                    WLAN_IFACE, "down"])

        if ret == 0:
            print("ok")
        else:
            print("fail")
            print("== Cannot continue !")
            sys.exit(1)

        """ Enabling monitor mode with iwconfig """
        print("== Enabling monitor mode... ", end="")

        ret = call(["/data/data/com.termux/files/usr/bin/iwconfig",
                    WLAN_IFACE, "mode", "monitor"],
                   stdout=mystdout, stderr=mystdout)

        if ret == 0:
            print("ok")
        else:
            print("fail")
            print("== Cannot continue !")
            sys.exit(1)

        """ Activating interface with ifconfig """
        print("== Activating interface... ", end="")

        ret = call(["/data/data/com.termux/files/usr/bin/ifconfig",
                    WLAN_IFACE, "up"])

        if ret == 0:
            print("ok")
        else:
            print("fail")
            print("== Cannot continue !")
            sys.exit(1)

    file_prefix = "wifi-dump"

    if len(sys.argv) >= 2:
        call(["/data/data/com.termux/files/usr/bin/airodump-ng",
              "--channel", sys.argv[1],
              "--output-format", "pcap",
              "--write", file_prefix,
              WLAN_IFACE])
    else:
        print_usage()
        sys.exit(1)

def shutdown(signal, frame):
    """ Set output file permissions and exit with status 0 """

    owner_uid = os.environ.get('TERMUX_UID')

    if owner_uid != None:
        files = (file for file in os.listdir(os.curdir))

        for file in files:
            if file.startswith("wifi-dump-") and file.endswith(".cap"):
                os.chown(file, int(owner_uid), int(owner_uid))

    sys.exit(0)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print_usage()
        sys.exit(0)

    if os.getuid() != 0:
        print("[!] Only superuser can do this.")
        sys.exit(1)
    else:
        attack()
